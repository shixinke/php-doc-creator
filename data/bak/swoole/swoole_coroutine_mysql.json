{"object":{"name":"Swoole\\Coroutine\\MySQL"},"comment":"mysql操作协程客户端","namespace":"Swoole\\Coroutine","consts":[],"properties":{"serverInfo":{"access":"private","type":"array","comment":"连接信息，保存的是传递给构造函数的数组","isStatic":false,"value":""},"sock":{"access":"public","type":"int","comment":"连接使用的文件描述符","isStatic":false,"value":0},"connected":{"access":"public","type":"boolean","comment":"是否连接上了MySQL服务器","isStatic":false,"value":false},"connect_error":{"access":"public","type":"string","comment":"连接错误信息","isStatic":false,"value":""},"connect_errno":{"access":"public","type":"int","comment":"连接错误码","isStatic":false,"value":0},"affected_rows":{"access":"public","type":"int","comment":"影响的行数","isStatic":false,"value":0},"insert_id":{"access":"public","type":"int","comment":"最后一个插入的记录id","isStatic":false,"value":0},"error":{"access":"public","type":"string","comment":"错误信息","isStatic":false,"value":""},"errno":{"access":"public","type":"int","comment":"错误码","isStatic":false,"value":0}},"methods":{"__construct":{"access":"public","comment":"mysql异步客户端初始化","isStatic":false,"return":"","example":"","parameters":[]},"__destruct":{"access":"public","comment":"析构函数","isStatic":false,"return":"","example":"","parameters":[]},"connect":{"access":"public","comment":"连接mysql服务器","isStatic":false,"return":"","example":"$server = array(\n    'host' => '192.168.56.102',\n    'user' => 'test',\n    'password' => 'test',\n    'database' => 'test',\n    'charset' => 'utf8',\n);","parameters":{"server_config":{"comment":"连接配置信息","type":"array","options":[]}}},"query":{"access":"public","comment":"执行sql语句","isStatic":false,"return":"array|boolean","example":"","parameters":{"sql":{"comment":"要执行的sql语句","type":"string","options":[]},"timeout":{"comment":"超时时间，超时的话会断开MySQL连接，0表示不设置超时时间","type":"double","options":[]}}},"recv":{"access":"public","comment":"接收包(获取延迟收包的结果，当没有进行延迟收包或者收包超时，返回false)","isStatic":false,"return":"mixed","example":"","parameters":[]},"begin":{"access":"public","comment":"启动事务","isStatic":false,"return":"","example":"","parameters":[]},"commit":{"access":"public","comment":"提交事务","isStatic":false,"return":"","example":"","parameters":[]},"rollback":{"access":"public","comment":"回滚事务(必须先调用begin启动事务才能调用rollback否则底层会抛出异常)","isStatic":false,"return":"","example":"","parameters":[]},"setDefer":{"access":"public","comment":"设置是否延迟","isStatic":false,"return":"boolean","example":"","parameters":{"defer":{"comment":"为true时，表明该Client要延迟收包，为false时，表明该Client非延迟收包，默认值为true","type":"boolean","options":[]}}},"getDefer":{"access":"public","comment":"返回当前设置的defer","isStatic":false,"return":"boolean","example":"","parameters":[]},"close":{"access":"public","comment":"关闭连接","isStatic":false,"return":"","example":"","parameters":[]},"__sleep":{"access":"public","comment":"序列化函数调用的魔术方法(在PHP进行序列化时，serialize() 检查类中是否有 __sleep() ,如果有，则该函数将在任何序列化之前运行。该函数必须返回一个需要进行序列化保存的成员属性数组，并且只序列化该函数返回的这些成员属性. 该函数有两个作用: 第一. 在序列化之前,关闭对象可能具有的任何数据库连接等. 第二. 指定对象中需要被序列化的成员属性,如果某个属性比较大而不需要储存下来,可以不把它写进__sleep要返回的数组中,这样该属性就不会被序列化)","isStatic":false,"return":"","example":"","parameters":[]},"__wakeup":{"access":"public","comment":"反序列化函数调用的魔术方法(unserialize() 从字节流中创建了一个对象之后,马上检查是否具有__wakeup 的函数的存在。如果存在，__wakeup 立刻被调用。使用 __wakeup 的目的是重建在序列化中可能丢失的任何数据库连接以及处理其它重新初始化的任务)","isStatic":false,"return":"","example":"","parameters":[]}}}