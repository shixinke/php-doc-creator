{
  "object": {
    "name": "swoole_client_coro"
  },
  "comment": "swoole 协程客户端",
  "namespace": "",
  "consts": {
    "MSG_OOB": {
      "comment": "读取带外数据",
      "type": "int",
      "value": 1
    },
    "MSG_PEEK": {
      "comment": "窥视socket缓存区中的数据。设置MSG_PEEK参数后，recv读取数据不会修改指针，因此下一次调用recv仍然会从上一次的位置起返回数据",
      "type": "int",
      "value": 2
    },
    "MSG_DONTWAIT": {
      "comment": "非阻塞接收数据，无论是否有数据都会立即返回",
      "type": "int",
      "value": 64
    },
    "MSG_WAITALL": {
      "comment": "阻塞等待直到收到指定长度的数据后返回",
      "type": "int",
      "value": 256
    }
  },
  "properties": {
    "errCode": {
      "access": "public",
      "type": "int",
      "comment": "错误码",
      "isStatic": false,
      "value": 0
    },
    "sock": {
      "access": "public",
      "type": "int",
      "comment": "此socket的文件描述符",
      "isStatic": false,
      "value": 0
    },
    "type": {
      "access": "public",
      "type": "int",
      "comment": "连接的类型",
      "isStatic": false,
      "value": 0
    },
    "setting": {
      "access": "public",
      "type": "array",
      "comment": "配置选项",
      "isStatic": false
    }
  },
  "methods": {
    "__construct": {
      "access": "public",
      "comment": "创建tcp客户端对象",
      "isStatic": false,
      "return": "",
      "example": "",
      "parameters": {
        "type": {
          "comment": "表示socket的类型，如TCP\/UDP(使用常量)",
          "type": "int",
          "options": []
        }
      }
    },
    "__destruct": {
      "access": "public",
      "comment": "析构方法",
      "isStatic": false,
      "return": "",
      "example": "",
      "parameters": []
    },
    "set": {
      "access": "public",
      "comment": "设置客户端参数",
      "isStatic": false,
      "return": "",
      "example": "",
      "parameters": {
        "settings": {
          "comment": "设置的参数",
          "type": "array",
          "options": []
        }
      }
    },
    "connect": {
      "access": "public",
      "comment": "连接远程TCP服务端",
      "isStatic": false,
      "return": "",
      "example": "",
      "parameters": {
        "host": {
          "comment": "是远程服务器的地址，1.9.24或更高版本已支持自动异步解析域名，$host可直接传入域名",
          "type": "string",
          "options": []
        },
        "port": {
          "comment": "是远程服务器端口",
          "type": "int",
          "options": []
        },
        "timeout": {
          "comment": "是网络IO的超时，包括connect\/send\/recv，单位是s，支持浮点数。默认为0.5s，即500ms",
          "type": "float",
          "options": []
        }
      }
    },
    "recv": {
      "access": "public",
      "comment": "从远程接收数据",
      "isStatic": false,
      "return": "",
      "example": "",
      "parameters": []
    },
    "send": {
      "access": "public",
      "comment": "发送数据到远程服务器",
      "isStatic": false,
      "return": "",
      "example": "",
      "parameters": {
        "data": {
          "comment": "要发送的数据",
          "type": "string",
          "options": []
        },
        "flag": {
          "comment": "是否等待所有数据到达后返回",
          "type": "boolean",
          "options": []
        }
      }
    },
    "sendfile": {
      "access": "public",
      "comment": "向服务器发送文件",
      "isStatic": false,
      "return": "boolean",
      "example": "",
      "parameters": {
        "filename": {
          "comment": "指定要发送文件的路径",
          "type": "string",
          "options": []
        },
        "offset": {
          "comment": "上传文件的偏移量，可以指定从文件的中间部分开始传输数据。此特性可用于支持断点续传",
          "type": "int",
          "options": []
        },
        "length": {
          "comment": "发送数据的尺寸，默认为整个文件的尺寸",
          "type": "int",
          "options": []
        }
      }
    },
    "sendto": {
      "access": "public",
      "comment": "向任意主机发送UDP数据包",
      "isStatic": false,
      "return": "boolean",
      "example": "",
      "parameters": {
        "ip": {
          "comment": "目标主机的IP地址，支持IPv4\/IPv6",
          "type": "string",
          "options": []
        },
        "port": {
          "comment": "目标主机端口",
          "type": "int",
          "options": []
        },
        "data": {
          "comment": "要发送的数据内容，不得超过64K",
          "type": "string",
          "options": []
        }
      }
    },
    "enableSSL": {
      "access": "public",
      "comment": "动态开启SSL隧道加密。客户端在建立连接时使用明文通信，中途希望改为SSL隧道加密通信，可以使用enableSSL方法来实现",
      "isStatic": false,
      "return": "",
      "example": "",
      "parameters": []
    },
    "getPeerCert": {
      "access": "public",
      "comment": "获取服务器端证书信息",
      "isStatic": false,
      "return": "string | bool",
      "example": "",
      "parameters": []
    },
    "verifyPeerCert": {
      "access": "public",
      "comment": "验证服务端证书信息",
      "isStatic": false,
      "return": "",
      "example": "",
      "parameters": []
    },
    "isConnected": {
      "access": "public",
      "comment": "返回swoole_client的连接状态",
      "isStatic": false,
      "return": "",
      "example": "",
      "parameters": []
    },
    "getsockname": {
      "access": "public",
      "comment": "用于获取客户端socket的本地host:port，必须在连接之后才可以使用",
      "isStatic": false,
      "return": "",
      "example": "",
      "parameters": []
    },
    "getpeername": {
      "access": "public",
      "comment": "获取对端socket的IP地址和端口",
      "isStatic": false,
      "return": "",
      "example": "",
      "parameters": []
    },
    "close": {
      "access": "public",
      "comment": "关闭连接",
      "isStatic": false,
      "return": "",
      "example": "",
      "parameters": []
    },
    "__sleep": {
      "access": "public",
      "comment": "序列化函数调用的魔术方法(在PHP进行序列化时，serialize() 检查类中是否有 __sleep() ,如果有，则该函数将在任何序列化之前运行。该函数必须返回一个需要进行序列化保存的成员属性数组，并且只序列化该函数返回的这些成员属性. 该函数有两个作用: 第一. 在序列化之前,关闭对象可能具有的任何数据库连接等. 第二. 指定对象中需要被序列化的成员属性,如果某个属性比较大而不需要储存下来,可以不把它写进__sleep要返回的数组中,这样该属性就不会被序列化)",
      "isStatic": false,
      "return": "",
      "example": "",
      "parameters": []
    },
    "__wakeup": {
      "access": "public",
      "comment": "反序列化函数调用的魔术方法(unserialize() 从字节流中创建了一个对象之后,马上检查是否具有__wakeup 的函数的存在。如果存在，__wakeup 立刻被调用。使用 __wakeup 的目的是重建在序列化中可能丢失的任何数据库连接以及处理其它重新初始化的任务)",
      "isStatic": false,
      "return": "",
      "example": "",
      "parameters": []
    }
  }
}