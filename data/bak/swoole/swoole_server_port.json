{"object":{"name":"swoole_server_port"},"comment":"TCP端口服务","namespace":"","consts":[],"properties":{"onConnect":{"access":"public","type":"callable","comment":"连接成功回调函数","isStatic":false},"onReceive":{"access":"public","type":"callable","comment":"接收到数据时回调此函数","isStatic":false},"onClose":{"access":"public","type":"callable","comment":"TCP客户端连接关闭后，在worker进程中回调此函数","isStatic":false},"onPacket":{"access":"public","type":"callable","comment":"接收到UDP数据包时回调此函数，发生在worker进程中","isStatic":false},"onBufferFull":{"access":"public","type":"callable","comment":"当缓存区达到最高水位时触发此事件","isStatic":false},"onBufferEmpty":{"access":"public","type":"callable","comment":"当缓存区低于最低水位线时触发此事件","isStatic":false},"onRequest":{"access":"public","type":"callable","comment":"请求回调函数","isStatic":false},"onHandShake":{"access":"public","type":"unknown","comment":false,"isStatic":false},"onMessage":{"access":"public","type":"callable","comment":"当接收到消息时的回调函数","isStatic":false},"onOpen":{"access":"public","type":"callable","comment":"当连接打开时的回调函数","isStatic":false},"host":{"access":"public","type":"string","comment":"连接的主机","isStatic":false},"port":{"access":"public","type":"int","comment":"连接的主机的端口","isStatic":false,"value":0},"type":{"access":"public","type":"int","comment":"socket的类型","isStatic":false,"value":0},"sock":{"access":"public","type":"int","comment":"连接句柄","isStatic":false,"value":0},"setting":{"access":"public","type":"array","comment":"通过swoole_server:set()设置的参数会保存到setting属性上","isStatic":false}},"methods":{"__construct":{"access":"private","comment":"初始化方法","isStatic":false,"return":"","example":"","parameters":[]},"__destruct":{"access":"public","comment":"析构函数","isStatic":false,"return":"","example":"","parameters":[]},"set":{"access":"public","comment":"设置swoole_server运行时的参数","isStatic":false,"return":"","example":"","parameters":{"settings":{"comment":"配置选项","type":"array","options":[]}}},"on":{"access":"public","comment":"绑定事件(为事件注册函数)","isStatic":false,"return":"","example":"","parameters":{"event_name":{"comment":"事件名称","type":"string","options":[]},"callback":{"comment":"事件对应的回调函数","type":"callable","options":[]}}},"__sleep":{"access":"public","comment":"序列化函数调用的魔术方法(在PHP进行序列化时，serialize() 检查类中是否有 __sleep() ,如果有，则该函数将在任何序列化之前运行。该函数必须返回一个需要进行序列化保存的成员属性数组，并且只序列化该函数返回的这些成员属性. 该函数有两个作用: 第一. 在序列化之前,关闭对象可能具有的任何数据库连接等. 第二. 指定对象中需要被序列化的成员属性,如果某个属性比较大而不需要储存下来,可以不把它写进__sleep要返回的数组中,这样该属性就不会被序列化)","isStatic":false,"return":"","example":"","parameters":[]},"__wakeup":{"access":"public","comment":"反序列化函数调用的魔术方法(unserialize() 从字节流中创建了一个对象之后,马上检查是否具有__wakeup 的函数的存在。如果存在，__wakeup 立刻被调用。使用 __wakeup 的目的是重建在序列化中可能丢失的任何数据库连接以及处理其它重新初始化的任务)","isStatic":false,"return":"","example":"","parameters":[]}}}