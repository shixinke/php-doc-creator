{"version":"2.0.10","comment":"面向生产环境的 PHP 异步网络通信引擎。使 PHP 开发人员可以编写高性能的异步并发 TCP、UDP、Unix Socket、HTTP，WebSocket 服务。Swoole 可以广泛应用于互联网、移动通信、企业软件、云计算、网络游戏、物联网（IOT）、车联网、智能家居等领域","constants":{"SWOOLE_BASE":{"value":4,"comment":"Base模式，传统的异步非阻塞模式，如果回调函数中有阻塞操作会导致server退化为同步模式"},"SWOOLE_THREAD":{"value":2,"comment":"线程模式(已废弃)，多线程Worker模式。Reactor线程来处理网络事件轮询，读取数据。得到的请求交给worker线程去处理"},"SWOOLE_PROCESS":{"value":3,"comment":"进程模式(默认)。提供完善的进程管理、内存保护机制"},"SWOOLE_IPC_UNSOCK":{"value":1,"comment":"使用Unix的socket进行进程间通信"},"SWOOLE_IPC_MSGQUEUE":{"value":2,"comment":"使用消息队列进行进程间通信"},"SWOOLE_IPC_PREEMPTIVE":{"value":3,"comment":"抢占式进程间通信"},"SWOOLE_SOCK_TCP":{"value":1,"comment":"创建tcp socket"},"SWOOLE_SOCK_TCP6":{"value":3,"comment":"创建tcp ipv6 socket"},"SWOOLE_SOCK_UDP":{"value":2,"comment":"创建udp socket"},"SWOOLE_SOCK_UDP6":{"value":4,"comment":"创建udp ipv6 socket"},"SWOOLE_SOCK_UNIX_DGRAM":{"value":5,"comment":"UNIX UDP socket(数据报文)"},"SWOOLE_SOCK_UNIX_STREAM":{"value":6,"comment":"UNIX TCP socket(数据流)"},"SWOOLE_TCP":{"value":1,"comment":"TCP IPv4"},"SWOOLE_TCP6":{"value":3,"comment":"TCP IPv6"},"SWOOLE_UDP":{"value":2,"comment":"UDP IPv4"},"SWOOLE_UDP6":{"value":4,"comment":"UDP IPv6"},"SWOOLE_UNIX_DGRAM":{"value":5,"comment":"UNIX数据报文(一般是UDP协议)"},"SWOOLE_UNIX_STREAM":{"value":6,"comment":"UNIX数据流(一般是TCP协议)"},"SWOOLE_SOCK_SYNC":{"value":0,"comment":"同步socket"},"SWOOLE_SOCK_ASYNC":{"value":1,"comment":"异步socket"},"SWOOLE_SYNC":{"value":2048,"comment":"swoole同步"},"SWOOLE_ASYNC":{"value":1024,"comment":"swoole异步"},"SWOOLE_KEEP":{"value":4096,"comment":"长连接"},"SWOOLE_EVENT_READ":{"value":512,"comment":"swoole读事件"},"SWOOLE_EVENT_WRITE":{"value":1024,"comment":"swoole写事件"},"SWOOLE_VERSION":{"value":"2.0.10","comment":"swoole 版本号"},"SWOOLE_AIO_BASE":{"value":0,"comment":"使用类似于Node.js的线程池同步阻塞模拟异步"},"SWOOLE_AIO_LINUX":{"value":1,"comment":"Linux异步IO"},"SWOOLE_FILELOCK":{"value":2,"comment":"swoole文件锁"},"SWOOLE_MUTEX":{"value":3,"comment":"swoole互斥锁"},"SWOOLE_SEM":{"value":4,"comment":"swoole信号量"},"SWOOLE_RWLOCK":{"value":1,"comment":"swoole读写锁"},"SWOOLE_SPINLOCK":{"value":5,"comment":"swoole自旋锁"},"WEBSOCKET_OPCODE_TEXT":{"value":1,"comment":"UTF-8文本字符数据(websocket数据帧类型)"},"WEBSOCKET_OPCODE_BINARY":{"value":2,"comment":"二进制数据(websocket数据帧类型)"},"WEBSOCKET_OPCODE_PING":{"value":9,"comment":"ping数据(websocket数据帧类型)"},"WEBSOCKET_STATUS_CONNECTION":{"value":1,"comment":"连接进入等待握手"},"WEBSOCKET_STATUS_HANDSHAKE":{"value":2,"comment":"websocket正在握手状态"},"WEBSOCKET_STATUS_FRAME":{"value":3,"comment":"已握手成功等待浏览器发送数据帧"},"WEBSOCKET_STATUS_ACTIVE":{"value":3,"comment":"websocket活动连接状态"},"SWOOLE_FAST_PACK":{"value":1,"comment":"是否开启对异步任务数据进行序列化功能"},"UNSERIALIZE_OBJECT_TO_ARRAY":{"value":1,"comment":"将对象反序列化为数组"},"UNSERIALIZE_OBJECT_TO_STDCLASS":{"value":2,"comment":"将对象反序列化为标准类"}},"ini":{"swoole.aio_thread_num":{"value":"2","options":[],"comment":"swoole异步IO线程数"},"swoole.display_errors":{"value":"On","options":[],"comment":"是否显示错误"},"swoole.use_namespace":{"value":"0","options":[],"comment":"是否启用命名空间"},"swoole.fast_serialize":{"value":"1","options":[],"comment":"是否开启对异步任务数据进行序列化功能(开启使用On)"},"swoole.unixsock_buffer_size":{"value":"8388608","options":[],"comment":"unix域连接的缓冲区大小"}},"functions":{"swoole_version":{"comment":"获取swoole扩展的版本号","parameters":[],"return":"string","example":"$version = swoole_version();"},"swoole_cpu_num":{"comment":"获取本机CPU的数量","parameters":[],"return":"int","example":"$num = swoole_cpu_num();"},"swoole_last_error":{"comment":"获取最近一次的错误码","parameters":[],"return":"int","example":"$errno = swoole_last_error();"},"swoole_event_add":{"comment":"为指定的socket添加事件监听器","parameters":{"fd":{"comment":"连接句柄(文件描述符)","options":[],"type":"int"},"read_callback":{"comment":"读事件回调","options":[],"type":"callable"},"write_callback":{"comment":"写事件回调","options":[],"type":"callable"},"events":{"comment":"事件名称，可选择关闭\/开启可读可写事件，如SWOOLE_EVENT_READ，SWOOLE_EVENT_WRITE，或者SWOOLE_EVENT_READ | SWOOLE_EVENT_WRITE","options":[],"type":"int"}},"return":"boolean","example":""},"swoole_event_set":{"comment":"修改socket事件的设置","parameters":{"fd":{"comment":"连接句柄","options":[],"type":"int"},"read_callback":{"comment":"读事件回调","options":[],"type":"callable"},"write_callback":{"comment":"写事件回调","options":[],"type":"callable"},"events":{"comment":"事件名称,，可选择关闭\/开启可读可写事件，如SWOOLE_EVENT_READ，SWOOLE_EVENT_WRITE，或者SWOOLE_EVENT_READ | SWOOLE_EVENT_WRITE","options":[],"type":"int"}},"return":"boolean","example":""},"swoole_event_del":{"comment":"删除一个事件(必须在swoole_event_add后面使用)","parameters":{"fd":{"comment":"连接句柄","options":[],"type":"int"}},"return":"boolean","example":""},"swoole_event_exit":{"comment":"退出事件循环","parameters":[],"return":"void","example":""},"swoole_event_wait":{"comment":"事件轮询","parameters":[],"return":"void","example":""},"swoole_event_write":{"comment":"异步写事件","parameters":{"fd":{"comment":"连接句柄","options":[],"type":"int"},"data":{"comment":"写入的内容","options":[],"type":"string"}},"return":"","example":""},"swoole_event_defer":{"comment":"延后执行一个PHP函数","parameters":{"callback":{"comment":"要执行的函数","options":[],"type":"callable"}},"return":"","example":""},"swoole_event_cycle":{"comment":"定义事件循环周期执行函数。此函数会在每一轮事件循环结束时调用","parameters":{"callback":{"comment":"要设置的回调函数，必须为可执行。$callback为null时表示清除cycle函数","options":[],"type":"callable"}},"return":"boolean","example":""},"swoole_timer_after":{"comment":"添加一个在指定的时间后执行某个函数的定时器(执行成功返回定时器ID)","parameters":{"ms":{"comment":"延迟的毫秒数","options":[],"type":"int"},"callback":{"comment":"执行的函数","options":[],"type":"callable"},"param":{"comment":"函数参数","options":[],"type":"mixed"}},"return":"int","example":""},"swoole_timer_tick":{"comment":"添加一个在指定时间循环执行某个函数的定时器","parameters":{"ms":{"comment":"循环周期时间","options":[],"type":"int"},"callback":{"comment":"执行的函数","options":[],"type":"callable"}},"return":"int","example":""},"swoole_timer_exists":{"comment":"检查一个定时器是否存在","parameters":{"timer_id":{"comment":"定时器ID","options":[],"type":"int"}},"return":"bool","example":""},"swoole_timer_clear":{"comment":"清除某个定时器","parameters":{"timer_id":{"comment":"定时器ID","options":[],"type":"int"}},"return":"bool","example":""},"swoole_async_set":{"comment":"置异步IO相关的选项\n设置的选项可以为以下值:\n thread_num : 设置异步文件IO线程的数量\n    aio_mode : 设置异步文件IO的操作模式，目前支持SWOOLE_AIO_BASE（使用类似于Node.js的线程池同步阻塞模拟异步）、SWOOLE_AIO_LINUX（Linux Native AIO） 2种模式\n    enable_signalfd : 开启和关闭signalfd特性的使用\n    socket_buffer_size : 设置SOCKET内存缓存区尺寸\n    socket_dontwait :在内存缓存区已满的情况下禁止底层阻塞等待\n    log_file :设置日志文件路径\n    log_level : 设置错误日志等级","parameters":{"settings":{"comment":"设置的选项","options":[],"type":"array"}},"return":"","example":"swoole_async_set(array('thread_num'=>2))"},"swoole_async_read":{"comment":"异步读文件，使用此函数读取文件是非阻塞的，当读操作完成时会自动回调指定的函数","parameters":{"filename":{"comment":"文件名","options":[],"type":"string"},"callback":{"comment":"读操作完成后的回调函数, 其回调函数原型：\n    bool callback(string $filename, string $content);\n    * $filename，文件名称 \n     * $content，读取到的分段内容，如果内容为空，表明文件已读完","options":[],"type":"callable"},"chunk_size":{"comment":"读的块大小","options":[],"type":"int"},"offset":{"comment":"读文件的指针偏移量","options":[],"type":"int"}},"return":"bool","example":""},"swoole_async_write":{"comment":"异步写文件，与swoole_async_writefile不同，write是分段读写的。不需要一次性将要写的内容放到内存里，所以只占用少量内存。swoole_async_write通过传入的offset参数来确定写入的位置","parameters":{"filename":{"comment":"写入的文件名","options":[],"type":"string"},"content":{"comment":"写入的文件内容","options":[],"type":"string"},"offset":{"comment":"写入的文件位置(指针偏移)","options":[],"type":"int"},"callback":{"comment":"写完成后执行的回调函数","options":[],"type":"callable"}},"return":"","example":""},"swoole_async_readfile":{"comment":"异步读取文件内容(与readfile功能类似)，完成后并执行某个函数","parameters":{"filename":{"comment":"文件名","options":[],"type":"string"},"callback":{"comment":"读文件完成后的回调函数","options":[],"type":"callable"}},"return":"","example":"swoole_async_readfile(__DIR__.\"\/server.php\", function($filename, $content) {\n      echo \"$filename: $content\";\n});"},"swoole_async_writefile":{"comment":"异步写文件，调用此函数后会立即返回。当写入完成时会自动回调指定的callback函数","parameters":{"filename":{"comment":"写入的文件名","options":[],"type":"string"},"content":{"comment":"写入的内容","options":[],"type":"string"},"callback":{"comment":"写文件完成后的回调函数","options":[],"type":"callable"},"flags":{"comment":"","options":[],"type":""}},"return":"","example":""},"swoole_async_dns_lookup":{"comment":"将域名解析为IP地址。调用此函数是非阻塞的，调用会立即返回","parameters":{"hostname":{"comment":"域名","options":[],"type":"string"},"callback":{"comment":"解析后的回调函数","options":[],"type":"callable"}},"return":"","example":"swoole_async_dns_lookup(\"www.baidu.com\", function($host, $ip){ \necho \"{$host} : {$ip}\n    \";\n});"},"swoole_async_dns_lookup_coro":{"comment":"协程DNS查询","parameters":{"domain_name":{"comment":"要查询的域名","options":[],"type":"string"}},"return":"string|bool","example":""},"swoole_client_select":{"comment":"swoole_client的并行处理中用了select来做IO事件循环","parameters":{"read_array":{"comment":"可读文件描述符","options":[],"type":"array"},"write_array":{"comment":"可写文件描述符","options":[],"type":"array"},"error_array":{"comment":"错误文件描述符","options":[],"type":"array"},"timeout":{"comment":"超时时间","options":[],"type":"float"}},"return":"int","example":""},"swoole_select":{"comment":"swoole的并行处理中用了select来做IO事件循环","parameters":{"read_array":{"comment":"","options":[],"type":""},"write_array":{"comment":"","options":[],"type":""},"error_array":{"comment":"","options":[],"type":""},"timeout":{"comment":"","options":[],"type":""}},"return":"","example":""},"swoole_set_process_name":{"comment":"设置进程的名称(存在兼容性问题，优先使用PHP内置的cli_set_process_title函数)","parameters":{"process_name":{"comment":"进程名称","options":[],"type":"string"}},"return":"","example":"swoole_set_process_name('swoole_server');"},"swoole_get_local_ip":{"comment":"用于获取本地所有网络接口的IP地址(返回以interface名称为key的关联数组)","parameters":[],"return":"array (只返回IPv4地址，返回结果会过滤掉本地的loop地址127.0.0.1,类似于array('eth0'=>'192.168.0.25'))","example":"$ips = swoole_get_local_ip();"},"swoole_get_local_mac":{"comment":"获取本地所有网络接口的mac地址(返回以interface名称为key的关联数组)","parameters":[],"return":"array","example":"$macs = swoole_get_local_mac();"},"swoole_strerror":{"comment":"从标准的Unix Errno错误码转换成错误信息","parameters":{"errno":{"comment":"标准错误码","options":[],"type":"int"}},"return":"string","example":""},"swoole_errno":{"comment":"获取最近一次系统调用的错误码","parameters":[],"return":"int","example":"echo swoole_strerror(swoole_errno());"}}}