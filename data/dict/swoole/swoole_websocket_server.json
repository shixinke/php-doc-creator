{"object":{"name":"swoole_websocket_server"},"comment":"swoole websocket服务端","namespace":"","extends":"swoole_http_server","consts":[],"properties":{"onConnect":{"access":"public","type":"callable","comment":"连接成功回调函数","isStatic":false},"onReceive":{"access":"public","type":"callable","comment":"接收到数据时回调此函数","isStatic":false},"onClose":{"access":"public","type":"callable","comment":"TCP客户端连接关闭后，在worker进程中回调此函数","isStatic":false},"onPacket":{"access":"public","type":"callable","comment":"接收到UDP数据包时回调此函数，发生在worker进程中","isStatic":false},"onBufferFull":{"access":"public","type":"callable","comment":"当缓存区达到最高水位时触发此事件","isStatic":false},"onBufferEmpty":{"access":"public","type":"callable","comment":"当缓存区低于最低水位线时触发此事件","isStatic":false},"onStart":{"access":"public","type":"callable","comment":"Server启动在主进程的主线程回调此函数","isStatic":false},"onShutdown":{"access":"public","type":"callable","comment":"此事件在Server正常结束时发生","isStatic":false},"onWorkerStart":{"access":"public","type":"callable","comment":"此事件在Worker进程\/Task进程启动时发生","isStatic":false},"onWorkerStop":{"access":"public","type":"callable","comment":"此事件在worker进程终止时发生。在此函数中可以回收worker进程申请的各类资源","isStatic":false},"onWorkerExit":{"access":"public","type":"callable","comment":"仅在开启reload_async特性后有效。异步重启特性，会先创建新的Worker进程处理新请求，旧的Worker进程自行退出","isStatic":false},"onWorkerError":{"access":"public","type":"callable","comment":"当worker\/task_worker进程发生异常后会在Manager进程内回调此函数","isStatic":false},"onTask":{"access":"public","type":"callable","comment":"在task_worker进程内被调用","isStatic":false},"onFinish":{"access":"public","type":"callable","comment":"当worker进程投递的任务在task_worker中完成时，task进程会通过swoole_server->finish()方法将任务处理的结果发送给worker进程。","isStatic":false},"onManagerStart":{"access":"public","type":"callable","comment":"当管理进程启动时调用它","isStatic":false},"onManagerStop":{"access":"public","type":"callable","comment":"当管理进程结束时调用它","isStatic":false},"onPipeMessage":{"access":"public","type":"callable","comment":"当工作进程收到由 sendMessage 发送的管道消息时会触发onPipeMessage事件","isStatic":false},"connections":{"access":"public","type":"iterator","comment":"TCP连接迭代器","isStatic":false},"host":{"access":"public","type":"string","comment":"连接的主机","isStatic":false},"port":{"access":"public","type":"int","comment":"连接的主机的端口","isStatic":false,"value":0},"type":{"access":"public","type":"int","comment":"socket的类型","isStatic":false,"value":0},"mode":{"access":"public","type":"int","comment":"运行模式(swoole提供了3种运行模式，默认为SWOOLE_PROCESS多进程模式)","isStatic":false,"value":0},"ports":{"access":"public","type":"array","comment":"当监听多端口时的端口列表","isStatic":false},"master_pid":{"access":"public","type":"int","comment":"主进程ID","isStatic":false,"value":0},"manager_pid":{"access":"public","type":"int","comment":"管理进程ID","isStatic":false,"value":0},"worker_id":{"access":"public","type":"int","comment":"当前工作进程(包括worker进程和task进程)编号","isStatic":false,"value":0},"taskworker":{"access":"public","type":"boolean","comment":"当前进程是否是task工作进程","isStatic":false,"value":false},"worker_pid":{"access":"public","type":"int","comment":"当前工作进程ID(操作系统进程)","isStatic":false,"value":0},"onRequest":{"access":"public","type":"callable","comment":"请求回调函数","isStatic":false},"onHandshake":{"access":"public","type":"callable","comment":"TCP握手时的回调函数","isStatic":false},"setting":{"access":"public","type":"array","comment":"通过swoole_server:set()设置的参数会保存到setting属性上","isStatic":false}},"methods":{"on":{"access":"public","comment":"绑定事件(为事件注册函数)","isStatic":false,"return":"","example":"","parameters":{"event_name":{"comment":"事件名称","type":"string","options":[]},"callback":{"comment":"事件对应的回调函数","type":"callable","options":[]}}},"push":{"access":"public","comment":"向websocket客户端连接推送数据，长度最大不得超过2M","isStatic":false,"return":"","example":"","parameters":{"fd":{"comment":"客户端连接的ID，如果指定的$fd对应的TCP连接并非websocket客户端，将会发送失败","type":"int","options":[]},"data":{"comment":"要发送的数据内容","type":"string","options":[]},"opcode":{"comment":"指定发送数据内容的格式，默认为文本。发送二进制内容$opcode参数需要设置","type":"int","options":[]},"finish":{"comment":"帧是否完成","type":"boolean","options":[]}}},"exist":{"access":"public","comment":"检测fd对应的连接是否存在","isStatic":false,"return":"","example":"","parameters":{"fd":{"comment":"连接句柄","type":"int","options":[]}}},"pack":{"access":"public","comment":"打包数据","isStatic":true,"return":"","example":"","parameters":{"data":{"comment":"消息内容","type":"string","options":[]},"opcode":{"comment":"WebSocket的opcode指令类型，1表示文本，2表示二进制数据，9表示心跳ping","type":"int","options":[]},"finish":{"comment":"帧是否完成","type":"boolean","options":[]},"mask":{"comment":"是否设置掩码","type":"boolean","options":[]}}},"unpack":{"access":"public","comment":"参数据进行解包","isStatic":true,"return":"","example":"","parameters":{"data":{"comment":"解包的数据","type":"string","options":[]}}},"start":{"access":"public","comment":"启动server","isStatic":false,"return":"","example":"","parameters":[]},"__sleep":{"access":"public","comment":"序列化函数调用的魔术方法(在PHP进行序列化时，serialize() 检查类中是否有 __sleep() ,如果有，则该函数将在任何序列化之前运行。该函数必须返回一个需要进行序列化保存的成员属性数组，并且只序列化该函数返回的这些成员属性. 该函数有两个作用: 第一. 在序列化之前,关闭对象可能具有的任何数据库连接等. 第二. 指定对象中需要被序列化的成员属性,如果某个属性比较大而不需要储存下来,可以不把它写进__sleep要返回的数组中,这样该属性就不会被序列化)","isStatic":false,"return":"","example":"","parameters":[]},"__wakeup":{"access":"public","comment":"反序列化函数调用的魔术方法(unserialize() 从字节流中创建了一个对象之后,马上检查是否具有__wakeup 的函数的存在。如果存在，__wakeup 立刻被调用。使用 __wakeup 的目的是重建在序列化中可能丢失的任何数据库连接以及处理其它重新初始化的任务)","isStatic":false,"return":"","example":"","parameters":[]},"__construct":{"access":"public","comment":"swoole_server初始化方法","isStatic":false,"return":"","example":"","parameters":{"host":{"comment":"主机IP","type":"string","options":[]},"port":{"comment":"端口","type":"int","options":[]},"mode":{"comment":"运行模式","type":"int","options":[]},"sock_type":{"comment":"socket类型","type":"int","options":[]}}},"__destruct":{"access":"public","comment":"析构函数","isStatic":false,"return":"","example":"","parameters":[]},"listen":{"access":"public","comment":"添加监听端口(是addlistener的别名)","isStatic":false,"return":"","example":"","parameters":{"host":{"comment":"监听的主机","type":"string","options":[]},"port":{"comment":"监听的端口号","type":"int","options":[]},"sock_type":{"comment":"socket类型","type":"int","options":[]}}},"addlistener":{"access":"public","comment":"添加监听端口","isStatic":false,"return":"","example":"","parameters":{"host":{"comment":"监听的主机","type":"string","options":[]},"port":{"comment":"监听的端口号","type":"int","options":[]},"sock_type":{"comment":"socket类型","type":"int","options":[]}}},"set":{"access":"public","comment":"设置swoole_server运行时的参数","isStatic":false,"return":"","example":"","parameters":{"settings":{"comment":"配置选项","type":"array","options":[]}}},"send":{"access":"public","comment":"向客户端发送数据","isStatic":false,"return":"","example":"","parameters":{"fd":{"comment":"连接句柄","type":"int","options":[]},"send_data":{"comment":"发送的数据","type":"string","options":[]},"reactor_id":{"comment":"UDP服务器使用$fd保存客户端IP，$extraData保存server_fd和port","type":"int","options":[]}}},"sendto":{"access":"public","comment":"向任意客户端发送UDP数据包","isStatic":false,"return":"","example":"","parameters":{"ip":{"comment":"IPv4字符串，如192.168.1.102。如果IP不合法会返回错误","type":"string","options":[]},"port":{"comment":"为 1-65535的网络端口号，如果端口错误发送会失败","type":"int","options":[]},"send_data":{"comment":"发送的数据内容，可以是文本或者二进制内容","type":"string","options":[]},"server_socket":{"comment":"服务器可能会同时监听多个UDP端口，此参数可以指定使用哪个端口发送数据包","type":"int","options":[]}}},"sendwait":{"access":"public","comment":"阻塞的向客户端发送数据","isStatic":false,"return":"","example":"","parameters":{"conn_fd":{"comment":"与客户端连接的句柄","type":"int","options":[]},"send_data":{"comment":"发送的数据","type":"string","options":[]}}},"protect":{"access":"public","comment":"设置客户端连接为保护状态，不被心跳线程切断","isStatic":false,"return":"","example":"","parameters":{"fd":{"comment":"要设置保护状态的客户端连接fd","type":"int","options":[]},"is_protected":{"comment":"设置的状态，true表示保护状态，false表示不保护","type":"boolean","options":[]}}},"sendfile":{"access":"public","comment":"向客户端发送文件","isStatic":false,"return":"","example":"","parameters":{"conn_fd":{"comment":"连接句柄","type":"int","options":[]},"filename":{"comment":"文件名","type":"string","options":[]},"offset":{"comment":"指定文件偏移量，可以从文件的某个位置起发送数据。默认为0，表示从文件头部开始发送","type":"int","options":[]},"length":{"comment":"指定发送的长度，默认为文件尺寸","type":"int","options":[]}}},"close":{"access":"public","comment":"关闭客户端连接","isStatic":false,"return":"","example":"","parameters":{"fd":{"comment":"连接句柄","type":"int","options":[]},"reset":{"comment":"设置为true会强制关闭连接，丢弃发送队列中的数据","type":"boolean","options":[]}}},"confirm":{"access":"public","comment":"确认连接，与enable_delay_receive或wait_for_bind配合使用","isStatic":false,"return":"","example":"","parameters":{"fd":{"comment":"连接句柄","type":"int","options":[]}}},"pause":{"access":"public","comment":"停止接收数据","isStatic":false,"return":"","example":"","parameters":{"fd":{"comment":"连接句柄","type":"int","options":[]}}},"resume":{"access":"public","comment":"恢复数据接收。与pause方法成对使用","isStatic":false,"return":"","example":"","parameters":{"fd":{"comment":"连接句柄","type":"int","options":[]}}},"task":{"access":"public","comment":"投递一个任务到task_worker连接池中","isStatic":false,"return":"","example":"","parameters":{"data":{"comment":"要投递的任务数据，可以为除资源类型之外的任意PHP变量","type":"mixed","options":[]},"worker_id":{"comment":"可以制定要给投递给哪个task进程，传入ID即可","type":"int","options":[]},"finish_callback":{"comment":"完成后的回调函数","type":"callable","options":[]}}},"taskwait":{"access":"public","comment":"以阻塞的形式投递一个任务到task_worker连接池中","isStatic":false,"return":"","example":"","parameters":{"data":{"comment":"要投递的任务数据，可以为除资源类型之外的任意PHP变量","type":"mixed","options":[]},"timeout":{"comment":"超时时间","type":"float","options":[]},"worker_id":{"comment":"可以制定要给投递给哪个task进程，传入ID即可","type":"int","options":[]}}},"taskWaitMulti":{"access":"public","comment":"并发执行多个Task","isStatic":false,"return":"","example":"","parameters":{"tasks":{"comment":"必须为数字索引数组，不支持关联索引数组，底层会遍历$tasks将任务逐个投递到Task进程","type":"array","options":[]},"timeout":{"comment":"超时时间","type":"double","options":[]}}},"taskCo":{"access":"public","comment":"并发执行Task并进行协程调度","isStatic":false,"return":"array","example":"","parameters":{"tasks":{"comment":"必须为数字索引数组，不支持关联索引数组，底层会遍历$tasks将任务逐个投递到Task进程","type":"array","options":[]},"timeout":{"comment":"超时时间","type":"double","options":[]}}},"finish":{"access":"public","comment":"用于在task进程中通知worker进程任务已完成","isStatic":false,"return":"","example":"","parameters":{"data":{"comment":"要传递的数据","type":"string","options":[]}}},"reload":{"access":"public","comment":"重启所有工作进程","isStatic":false,"return":"boolean","example":"","parameters":[]},"shutdown":{"access":"public","comment":"关闭服务器","isStatic":false,"return":"","example":"","parameters":[]},"stop":{"access":"public","comment":"停止当前worker进程","isStatic":false,"return":"","example":"","parameters":{"worker_id":{"comment":"进程ID","type":"int","options":[]}}},"getLastError":{"access":"public","comment":"获取最近一次操作错误的错误码\n返回的错误码：\n1001 连接已经被Server端关闭了，出现这个错误一般是代码中已经执行了$serv->close()关闭了某个连接，但仍然调用$serv->send()向这个连接发送数据","isStatic":false,"return":"","example":"","parameters":[]},"heartbeat":{"access":"public","comment":"检测所有服务器连接，并找出已经超时的连接","isStatic":false,"return":"","example":"","parameters":{"reactor_id":{"comment":"是否关闭超时的连接，默认为true","type":"boolean","options":[]}}},"connection_info":{"access":"public","comment":"获取客户端连接信息","isStatic":false,"return":"from_id","example":"","parameters":{"fd":{"comment":"连接句柄","type":[],"options":[]},"reactor_id":{"comment":"reactor线程id","type":"int","options":[]}}},"connection_list":{"access":"public","comment":"用来遍历所有客户端连接","isStatic":false,"return":"","example":"","parameters":{"start_fd":{"comment":"起始fd","type":"int","options":[]},"find_count":{"comment":"每页取多少条","type":"int","options":[]}}},"getClientInfo":{"access":"public","comment":"获取连接的信息，别名是swoole_server->connection_info","isStatic":false,"return":"","example":"","parameters":{"fd":{"comment":"连接句柄","type":[],"options":[]},"reactor_id":{"comment":"reactor线程id","type":"int","options":[]}}},"getClientList":{"access":"public","comment":"用来遍历所有客户端连接(server->connection_list的别名)","isStatic":false,"return":"","example":"","parameters":{"start_fd":{"comment":"起始fd","type":"int","options":[]},"find_count":{"comment":"每页取多少条","type":"int","options":[]}}},"after":{"access":"public","comment":"在指定时间后执行某个回调函数","isStatic":false,"return":"","example":"","parameters":{"ms":{"comment":"指定时间，单位为毫秒","type":"int","options":[]},"callback":{"comment":"回调函数","type":"callable","options":[]},"param":{"comment":"给回调函数传入的参数","type":"array","options":[]}}},"tick":{"access":"public","comment":"添加定时器","isStatic":false,"return":"","example":"","parameters":{"ms":{"comment":"指定时间，单位为毫秒","type":"int","options":[]},"callback":{"comment":"回调函数","type":"callable","options":[]}}},"clearTimer":{"access":"public","comment":"清除定时器","isStatic":false,"return":"","example":"","parameters":{"timer_id":{"comment":"定时器ID","type":"int","options":[]}}},"defer":{"access":"public","comment":"延迟执行一个PHP函数","isStatic":false,"return":"","example":"","parameters":{"callback":{"comment":"执行的函数","type":"callable","options":[]}}},"sendMessage":{"access":"public","comment":"向任意worker进程或task进程发送消息","isStatic":false,"return":"","example":"","parameters":{"dst_worker_id":{"comment":"目标worker的ID","type":"int","options":[]},"data":{"comment":"发送的消息","type":"string","options":[]}}},"addProcess":{"access":"public","comment":"添加一个自定义的工作进程","isStatic":false,"return":"","example":"","parameters":{"process":{"comment":"进程对象","type":"Swoole\\Process","options":[]}}},"stats":{"access":"public","comment":"得到当前server的活动TCP连接数\narray (","isStatic":false,"return":"","example":"","parameters":[]},"bind":{"access":"public","comment":"将连接绑定到某个用户定义的ID","isStatic":false,"return":"","example":"","parameters":{"fd":{"comment":"连接句柄","type":"int","options":[]},"uid":{"comment":"用户定义的ID","type":"int","options":[]}}}}}