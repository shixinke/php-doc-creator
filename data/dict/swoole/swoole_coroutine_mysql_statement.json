{"object":{"name":"Swoole\\Coroutine\\MySQL\\Statement"},"comment":"协程版mysql客户端响应状态行","namespace":"Swoole\\Coroutine\\MySQL","interfaces":[],"consts":[],"properties":{"affected_rows":{"access":"public","type":"int","comment":"操作影响行数","isStatic":false,"value":0},"insert_id":{"access":"public","type":"int","comment":"插入数据的ID","isStatic":false,"value":0},"error":{"access":"public","type":"string","comment":"操作错误提示信息","isStatic":false,"value":""},"errno":{"access":"public","type":"int","comment":"操作错误码","isStatic":false,"value":0}},"methods":{"execute":{"access":"public","comment":"执行语句","isStatic":false,"return":"","example":"","parameters":{"params":{"comment":"绑定的参数列表","type":"array","options":[]}}},"__destruct":{"access":"public","comment":"析构函数","isStatic":false,"return":"","example":"","parameters":[]},"__sleep":{"access":"public","comment":"序列化函数调用的魔术方法(在PHP进行序列化时，serialize() 检查类中是否有 __sleep() ,如果有，则该函数将在任何序列化之前运行。该函数必须返回一个需要进行序列化保存的成员属性数组，并且只序列化该函数返回的这些成员属性. 该函数有两个作用: 第一. 在序列化之前,关闭对象可能具有的任何数据库连接等. 第二. 指定对象中需要被序列化的成员属性,如果某个属性比较大而不需要储存下来,可以不把它写进__sleep要返回的数组中,这样该属性就不会被序列化)","isStatic":false,"return":"","example":"","parameters":[]},"__wakeup":{"access":"public","comment":"反序列化函数调用的魔术方法(unserialize() 从字节流中创建了一个对象之后,马上检查是否具有__wakeup 的函数的存在。如果存在，__wakeup 立刻被调用。使用 __wakeup 的目的是重建在序列化中可能丢失的任何数据库连接以及处理其它重新初始化的任务)","isStatic":false,"return":"","example":"","parameters":[]}}}