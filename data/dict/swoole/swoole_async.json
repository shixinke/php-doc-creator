{"object":{"name":"swoole_async"},"comment":"异步IO操作","namespace":"","consts":[],"properties":[],"methods":{"read":{"access":"public","comment":"异步读文件，使用此函数读取文件是非阻塞的，当读操作完成时会自动回调指定的函数","isStatic":true,"return":"boolean","example":"","parameters":{"filename":{"comment":"读入的文件名","type":"string","options":[]},"callback":{"comment":"读文件完成后的回调函数(回调函数可使用的参数$fileName, $content)","type":"callable","options":[]},"chunk_size":{"comment":"每次读入的块大小","type":"int","options":[]},"offset":{"comment":"读入每次的偏移量","type":"int","options":[]}}},"write":{"access":"public","comment":"异步写文件，与swoole_async_writefile不同，write是分段读写的。不需要一次性将要写的内容放到内存里，所以只占用少量内存。swoole_async_write通过传入的offset参数来确定写入的位置","isStatic":true,"return":"","example":"","parameters":{"filename":{"comment":"写入的文件名","type":"string","options":[]},"content":{"comment":"写入的内容","type":"string","options":[]},"offset":{"comment":"写入的位置","type":"int","options":[]},"callback":{"comment":"写操作完成后的回调函数","type":"callable","options":[]}}},"readFile":{"access":"public","comment":"异步读取文件内容","isStatic":true,"return":"","example":"","parameters":{"filename":{"comment":"读入的文件名","type":"string","options":[]},"callback":{"comment":"读文件完成后的回调函数","type":"callable","options":[]}}},"writeFile":{"access":"public","comment":"异步写文件","isStatic":true,"return":"","example":"","parameters":{"filename":{"comment":"写入的文件名","type":"string","options":[]},"content":{"comment":"写入的内容","type":"string","options":[]},"callback":{"comment":"写操作完成后的回调函数","type":"callable","options":[]},"flags":{"comment":"参数4为写入的选项，可以使用FILE_APPEND表示追加到文件末尾","type":"int","options":[]}}},"dnsLookup":{"access":"public","comment":"将域名解析为IP地址。调用此函数是非阻塞的，调用会立即返回。将向下执行后面的代码(当DNS查询完成时，自动回调指定的callback函数)","isStatic":true,"return":"","example":"","parameters":{"hostname":{"comment":"域名","type":"string","options":[]},"callback":{"comment":"解析完成后的回调函数","type":"callable","options":[]}}},"dnsLookupCoro":{"access":"public","comment":"协程DNS查询","isStatic":true,"return":"","example":"","parameters":{"domain_name":{"comment":"解析的域名","type":"string","options":[]}}},"set":{"access":"public","comment":"置异步IO相关的选项\n设置的选项可以为以下值:\n thread_num : 设置异步文件IO线程的数量\n    aio_mode : 设置异步文件IO的操作模式，目前支持SWOOLE_AIO_BASE（使用类似于Node.js的线程池同步阻塞模拟异步）、SWOOLE_AIO_LINUX（Linux Native AIO） 2种模式\n    enable_signalfd : 开启和关闭signalfd特性的使用\n    socket_buffer_size : 设置SOCKET内存缓存区尺寸\n    socket_dontwait :在内存缓存区已满的情况下禁止底层阻塞等待\n    log_file :设置日志文件路径\n    log_level : 设置错误日志等级","isStatic":true,"return":"","example":"","parameters":{"settings":{"comment":"要设置的选项","type":"array","options":[]}}},"exec":{"access":"public","comment":"异步执行Shell命令。相当于shell_exec函数，执行后底层会fork一个子进程，并执行对应的command命令","isStatic":true,"return":"","example":"","parameters":{"command":{"comment":"为执行的终端指令，如ls","type":"string","options":[]},"callback":{"comment":"命令执行完毕子进程退出后会回调指定的$callback函数，回调函数接收2个参数，第一个参数为命令执行后的屏幕输出内容$result，第二个参数为进程退出的状态信息$status","type":"callable","options":[]}}}}}