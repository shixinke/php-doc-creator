{
  "version": "2.0.1",
  "comment": "Yac是一个用于PHP的共享和无锁存储器用户数据缓存.它可以用于替换APC或本地memcached。\n注：目前它还不是稳定版。因为是无锁的，这意味着，有时候你可能得到一个错误的数据（这取决于分配了多少个键槽和有多少键存储），所以你最好确保你的产品不是很敏感",
  "constants": {
    "YAC_VERSION": {
      "value": "2.0.1",
      "comment": "yac 版本"
    },
    "YAC_MAX_KEY_LEN": {
      "value": 48,
      "comment": "yac 键的最大长度"
    },
    "YAC_MAX_VALUE_RAW_LEN": {
      "value": 67108863,
      "comment": "yac 键值的最大长度"
    },
    "YAC_MAX_RAW_COMPRESSED_LEN": {
      "value": 1048576,
      "comment": "yac 原始数据的最大压缩长度"
    },
    "YAC_SERIALIZER": {
      "value": "PHP",
      "comment": "yac使用的序列化方法"
    }
  },
  "ini": {
    "yac.enable": {
      "value": "1",
      "options": [],
      "comment": "是否启用yac"
    },
    "yac.debug": {
      "value": "0",
      "options": [],
      "comment": "是否开启yac的debug模式"
    },
    "yac.keys_memory_size": {
      "value": "4M",
      "options": [],
      "comment": "yac的键所占用的总的内存大小"
    },
    "yac.values_memory_size": {
      "value": "64M",
      "options": [],
      "comment": "yac的键值所占用的总的内存大小"
    },
    "yac.compress_threshold": {
      "value": "-1",
      "options": [],
      "comment": "yac缓存压缩开关"
    },
    "yac.enable_cli": {
      "value": "0",
      "options": [],
      "comment": "是否启用yac的cli"
    }
  },
  "functions": [],
  "object": {
    "name": "Yac"
  },
  "namespace": "",
  "consts": [],
  "properties": {
    "_prefix": {
      "access": "protected",
      "type": "string",
      "comment": "缓存键前缀",
      "isStatic": false,
      "value": ""
    }
  },
  "methods": {
    "__construct": {
      "access": "public",
      "comment": "",
      "isStatic": false,
      "return": "",
      "example": "$yac = new Yac();\n$yac = new Yac('cache_')",
      "parameters": {
        "prefix": {
          "comment": "缓存键前缀",
          "type": "string",
          "options": []
        }
      }
    },
    "add": {
      "access": "public",
      "comment": "添加键值对",
      "isStatic": false,
      "return": "",
      "example": "",
      "parameters": {
        "keys": {
          "comment": "键名",
          "type": "string",
          "options": []
        },
        "value": {
          "comment": "键值",
          "type": "mixed",
          "options": []
        },
        "ttl": {
          "comment": "有效期",
          "type": "int",
          "options": []
        }
      }
    },
    "set": {
      "access": "public",
      "comment": "设置键值",
      "isStatic": false,
      "return": "",
      "example": "",
      "parameters": {
        "keys": {
          "comment": "键名或键值对",
          "type": "mixed",
          "options": []
        },
        "value": {
          "comment": "键值",
          "type": "mixed",
          "options": []
        },
        "ttl": {
          "comment": "有效期",
          "type": "int",
          "options": []
        }
      }
    },
    "__set": {
      "access": "public",
      "comment": "设置键值的魔术方法",
      "isStatic": false,
      "return": "",
      "example": "$yac->goods = 'apple';//相当于$yac->set('goods', 'apple');",
      "parameters": {
        "key": {
          "comment": "键",
          "type": "string",
          "options": []
        },
        "value": {
          "comment": "值",
          "type": "mixed",
          "options": []
        }
      }
    },
    "get": {
      "access": "public",
      "comment": "获取某个键的值或某些键的值",
      "isStatic": false,
      "return": "",
      "example": "$yac->get('goods');\n$yac->get(array('goods', 'test'));",
      "parameters": {
        "keys": {
          "comment": "键名",
          "type": "mixed",
          "options": []
        }
      }
    },
    "__get": {
      "access": "public",
      "comment": "获取某个键值的魔术方法",
      "isStatic": false,
      "return": "",
      "example": "return $yac->goods;//相当于$yac->get('goods')",
      "parameters": {
        "key": {
          "comment": "键名",
          "type": "string",
          "options": []
        }
      }
    },
    "delete": {
      "access": "public",
      "comment": "删除某个键或某几个键",
      "isStatic": false,
      "return": "",
      "example": "$yac->delete('goods');\n$yac->delete(array('goods', 'test'));",
      "parameters": {
        "keys": {
          "comment": "要删除的键",
          "type": "mixed",
          "options": []
        },
        "ttl": {
          "comment": "延迟删除时间",
          "type": "int",
          "options": []
        }
      }
    },
    "flush": {
      "access": "public",
      "comment": "刷新缓存，即清空缓存",
      "isStatic": false,
      "return": "",
      "example": "",
      "parameters": []
    },
    "info": {
      "access": "public",
      "comment": "获取缓存使用情况等信息",
      "isStatic": false,
      "return": "array",
      "example": "var_dump($yac->info());\narray(11) {    [\"memory_size\"]=> int(541065216)\n    [\"slots_memory_size\"]=> int(4194304)\n    [\"values_memory_size\"]=> int(536870912)\n    [\"segment_size\"]=> int(4194304)\n    [\"segment_num\"]=> int(128)\n    [\"miss\"]=> int(0)\n    [\"hits\"]=> int(955)\n    [\"fails\"]=> int(0)\n    [\"kicks\"]=> int(0)\n    [\"slots_size\"]=> int(32768)\n    [\"slots_used\"]=> int(955)\n}",
      "parameters": []
    },
    "dump": {
      "access": "public",
      "comment": "导出缓存",
      "isStatic": false,
      "return": "",
      "example": "",
      "parameters": []
    }
  }
}